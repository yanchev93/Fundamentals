using System;
using System.Text.RegularExpressions;
using System.Linq;
using System.Collections.Generic;

namespace _02._MirrorWords
{
    class Program
    {
        static void Main(string[] args)
        {
            string text = Console.ReadLine();

            string pattern = @"([@|#])(?<word>[A-Za-z]{3,})\1\1(?<word2>[A-Za-z]{3,})\1"; // \1(?<word2>[A-z]{3,})\1

            MatchCollection matches = Regex.Matches(text, pattern);
            int validPairsCount = matches.Count();

            if (validPairsCount > 0)
            {
                Console.WriteLine($"{validPairsCount} word pairs found!");
            }

            else
            {
                Console.WriteLine("No word pairs found!");
                Console.WriteLine("No mirror words!");
                return;
            }

            List<string> pairs = new List<string>();
            bool isMirror = false;

            foreach (Match match in matches)
            {
                string firstWord = match.Groups["word"].Value;
                string secondWord = match.Groups["word2"].Value;

                char[] secondWordReversed = secondWord.ToCharArray();
                Array.Reverse(secondWordReversed);

                string secondWordCompare = string.Concat(secondWordReversed);


                if (firstWord == secondWordCompare)
                {
                    pairs.Add($"{firstWord} <=> {secondWord}");
                    isMirror = true;
                }
            }

            if (isMirror)
            {
                Console.WriteLine("The mirror words are:");
                Console.WriteLine(string.Join(", ", pairs));
            }

            else
            {
                Console.WriteLine("No mirror words!");
            }
        }
    }
}
